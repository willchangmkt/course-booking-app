{"ast":null,"code":"import axios from \"axios\";\n// 連結到後端伺服器\nconst API_URL = \"http://localhost:8080/api/user\";\nclass AuthService {\n  // 登入的話要提供這些資料\n  login(email, password) {\n    return axios.post(API_URL + \"/login\", {\n      email,\n      password\n    });\n  }\n  // 登出的話就是把存在localStorage 的資料刪除，這樣子寫在login-component 裡面的\n  //   localStorage.setItem(\"user\", JSON.stringify(response.data)); 就會不見\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n  // 註冊的話要提供參數這些資料\n  register(username, email, password, role) {\n    // 執行axios.post，post 到後端進行註冊的route，之前也有用postman驗證過\n    // 如果要用post 的method 的畫，資料要放在要post的url 後面，用大括號包起來\n    // axios.post會return 一個promise ，所以直接return 就好\n    // 如果對AuthService去執行register 的話就會自動post 到api /register，並帶入{}內的四個參數\n    // 如果註冊成功的話就會return 一個promise，這個promise 就會變成fulfill\n    return axios.post(API_URL + \"/register\", {\n      username,\n      email,\n      password,\n      role\n    });\n  }\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem(\"user\"));\n  }\n}\n// 創建一個AuthService() 所製作出來的物件，執行constructor\nexport default new AuthService();","map":{"version":3,"names":["axios","API_URL","AuthService","login","email","password","post","logout","localStorage","removeItem","register","username","role","getCurrentUser","JSON","parse","getItem"],"sources":["C:/Users/Yuan/Documents/udemy_2024_Web_Wilson/project9/client/src/services/auth.service.js"],"sourcesContent":["import axios from \"axios\";\r\n// 連結到後端伺服器\r\nconst API_URL = \"http://localhost:8080/api/user\";\r\n\r\nclass AuthService {\r\n  // 登入的話要提供這些資料\r\n  login(email, password) {\r\n    return axios.post(API_URL + \"/login\", { email, password });\r\n  }\r\n  // 登出的話就是把存在localStorage 的資料刪除，這樣子寫在login-component 裡面的\r\n  //   localStorage.setItem(\"user\", JSON.stringify(response.data)); 就會不見\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n  // 註冊的話要提供參數這些資料\r\n  register(username, email, password, role) {\r\n    // 執行axios.post，post 到後端進行註冊的route，之前也有用postman驗證過\r\n    // 如果要用post 的method 的畫，資料要放在要post的url 後面，用大括號包起來\r\n    // axios.post會return 一個promise ，所以直接return 就好\r\n    // 如果對AuthService去執行register 的話就會自動post 到api /register，並帶入{}內的四個參數\r\n    // 如果註冊成功的話就會return 一個promise，這個promise 就會變成fulfill\r\n    return axios.post(API_URL + \"/register\", {\r\n      username,\r\n      email,\r\n      password,\r\n      role,\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem(\"user\"));\r\n  }\r\n}\r\n// 創建一個AuthService() 所製作出來的物件，執行constructor\r\nexport default new AuthService();\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,MAAMC,OAAO,GAAG,gCAAgC;AAEhD,MAAMC,WAAW,CAAC;EAChB;EACAC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IACrB,OAAOL,KAAK,CAACM,IAAI,CAACL,OAAO,GAAG,QAAQ,EAAE;MAAEG,KAAK;MAAEC;IAAS,CAAC,CAAC;EAC5D;EACA;EACA;EACAE,MAAMA,CAAA,EAAG;IACPC,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;EACjC;EACA;EACAC,QAAQA,CAACC,QAAQ,EAAEP,KAAK,EAAEC,QAAQ,EAAEO,IAAI,EAAE;IACxC;IACA;IACA;IACA;IACA;IACA,OAAOZ,KAAK,CAACM,IAAI,CAACL,OAAO,GAAG,WAAW,EAAE;MACvCU,QAAQ;MACRP,KAAK;MACLC,QAAQ;MACRO;IACF,CAAC,CAAC;EACJ;EAEAC,cAAcA,CAAA,EAAG;IACf,OAAOC,IAAI,CAACC,KAAK,CAACP,YAAY,CAACQ,OAAO,CAAC,MAAM,CAAC,CAAC;EACjD;AACF;AACA;AACA,eAAe,IAAId,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}